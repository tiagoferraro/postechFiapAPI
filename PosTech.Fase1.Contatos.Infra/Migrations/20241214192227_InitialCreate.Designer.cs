// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PosTech.Fase1.Contatos.Infra.Context;

#nullable disable

namespace PosTech.Fase1.Contatos.Infra.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20241214192227_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PosTech.Fase1.Contatos.Domain.Entities.Contato", b =>
                {
                    b.Property<Guid?>("ContatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("DddId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ContatoId");

                    b.HasIndex("DddId");

                    b.ToTable("Contato", (string)null);
                });

            modelBuilder.Entity("PosTech.Fase1.Contatos.Domain.Entities.DDD", b =>
                {
                    b.Property<int>("DddId")
                        .HasColumnType("int");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DddId");

                    b.ToTable("Ddd", (string)null);
                });

            modelBuilder.Entity("PosTech.Fase1.Contatos.Domain.Entities.Contato", b =>
                {
                    b.HasOne("PosTech.Fase1.Contatos.Domain.Entities.DDD", "Ddd")
                        .WithMany()
                        .HasForeignKey("DddId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ddd");
                });

            modelBuilder.Entity("PosTech.Fase1.Contatos.Domain.Entities.DDD", b =>
                {
                    b.OwnsOne("PosTech.Fase1.Contatos.Domain.ObjectValue.UnidadeFederativa", "UnidadeFederativa", b1 =>
                        {
                            b1.Property<int>("DddId")
                                .HasColumnType("int");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("UfNome");

                            b1.Property<string>("Sigla")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("UfSigla");

                            b1.HasKey("DddId");

                            b1.ToTable("Ddd");

                            b1.WithOwner()
                                .HasForeignKey("DddId");
                        });

                    b.Navigation("UnidadeFederativa")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
